Creation of Custom Syntax Analyzer:

Step 1: Compile file analyzer.l with lex as follows:
	lex ./analyzer.l
Step 2: Compile file parser.y with yacc as follows (ignore warnings generated by yacc):
	yacc -d ./parser.y
Step 3: Compile the resulting C source files (lex.yy.c and y.tab.c) together with gcc as follows:
	gcc ./lex.yy.c ./y.tab.c
Step 4: Execute the resultant syntax analyzer (./a.out) as follows:
	./a.out
Step 5: Enter valid variable declarations, assignment statements and/or for loops

This custom syntax analyzer allows for following syntax:
	1)Single and multiple variable declarations in one line
	2)Simple assignment statements with only one variable being assigned
	3)Addition, subtraction, multiplication, division and modulus operations allowed
	4)Expressions surrounded by brackets
	5)Multiple statements separated by ';'
	6)Simple FOR loop where conditions of FOR loop are simple arithmetic expressions and body of FOR loop is a single assignment statement



